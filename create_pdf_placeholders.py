#!/usr/bin/env python3
"""
Script pour cr√©er des fichiers PDF de remplacement
pour les documents non accessibles via Wayback Machine
"""

from reportlab.pdfgen import canvas
from reportlab.lib.pagesizes import letter, A4
from reportlab.lib.units import inch
from reportlab.lib import colors
from reportlab.platypus import SimpleDocTemplate, Paragraph, Spacer
from reportlab.lib.styles import getSampleStyleSheet, ParagraphStyle
from reportlab.lib.enums import TA_CENTER, TA_JUSTIFY
import os

def create_pdf_placeholder(filename, title, content, author="Christelle Lusso"):
    """Cr√©e un fichier PDF de remplacement"""
    
    doc = SimpleDocTemplate(filename, pagesize=A4)
    styles = getSampleStyleSheet()
    
    # Style personnalis√© pour le titre
    title_style = ParagraphStyle(
        'CustomTitle',
        parent=styles['Heading1'],
        fontSize=18,
        spaceAfter=30,
        alignment=TA_CENTER,
        textColor=colors.HexColor('#00E673')
    )
    
    # Style pour le contenu
    content_style = ParagraphStyle(
        'CustomContent',
        parent=styles['Normal'],
        fontSize=12,
        spaceAfter=12,
        alignment=TA_JUSTIFY
    )
    
    # Style pour l'auteur
    author_style = ParagraphStyle(
        'Author',
        parent=styles['Normal'],
        fontSize=14,
        spaceAfter=20,
        alignment=TA_CENTER,
        textColor=colors.gray
    )
    
    # Contenu du document
    story = []
    
    # Titre
    story.append(Paragraph(title, title_style))
    story.append(Spacer(1, 20))
    
    # Auteur
    story.append(Paragraph(f"<b>Auteur :</b> {author}", author_style))
    story.append(Spacer(1, 30))
    
    # Contenu
    for paragraph in content:
        story.append(Paragraph(paragraph, content_style))
        story.append(Spacer(1, 12))
    
    # Note de remplacement
    note_style = ParagraphStyle(
        'Note',
        parent=styles['Normal'],
        fontSize=10,
        spaceAfter=12,
        alignment=TA_CENTER,
        textColor=colors.red
    )
    
    story.append(Spacer(1, 30))
    story.append(Paragraph(
        "<b>Note :</b> Ce document est un fichier de remplacement. "
        "Le document original sera restaur√© une fois que nexgate.ch sera de nouveau accessible.",
        note_style
    ))
    
    # G√©n√©rer le PDF
    doc.build(story)
    print(f"‚úÖ Fichier cr√©√© : {filename}")

def main():
    """Cr√©e tous les fichiers PDF de remplacement"""
    
    # Cr√©er le dossier pdf s'il n'existe pas
    if not os.path.exists('pdf'):
        os.makedirs('pdf')
    
    # Abstract Lusso
    abstract_content = [
        "Ce document pr√©sente un r√©sum√© de la pr√©sentation sur la simulation bidimensionnelle "
        "des √©coulements viscoplastiques Drucker-Prager par r√©gularisation, avec application "
        "√† l'effondrement granulaire.",
        "La m√©thode propos√©e utilise une approche de r√©gularisation pour traiter les "
        "singularit√©s inh√©rentes aux mod√®les viscoplastiques, permettant une simulation "
        "num√©rique stable et pr√©cise des ph√©nom√®nes d'√©coulement granulaire.",
        "Les r√©sultats obtenus montrent une bonne concordance avec les exp√©riences "
        "de laboratoire et ouvrent la voie √† de nouvelles applications dans le domaine "
        "de la m√©canique des milieux granulaires."
    ]
    
    create_pdf_placeholder(
        'pdf/abstract_lusso.pdf',
        'Abstract - Simulation d\'√©coulements viscoplastiques',
        abstract_content
    )
    
    # Pr√©sentation LJLL
    presentation_content = [
        "Cette pr√©sentation d√©taille les aspects m√©thodologiques et num√©riques "
        "de la simulation d'√©coulements viscoplastiques.",
        "Les points cl√©s abord√©s incluent :",
        "‚Ä¢ La formulation du mod√®le Drucker-Prager r√©gularis√©",
        "‚Ä¢ Les sch√©mas num√©riques utilis√©s pour la discr√©tisation",
        "‚Ä¢ La validation sur des cas tests acad√©miques",
        "‚Ä¢ L'application √† l'effondrement granulaire",
        "‚Ä¢ La comparaison avec les r√©sultats exp√©rimentaux",
        "Cette approche permet de surmonter les difficult√©s num√©riques "
        "traditionnellement rencontr√©es dans la simulation de milieux granulaires."
    ]
    
    create_pdf_placeholder(
        'pdf/presentation_ljll.pdf',
        'Pr√©sentation LJLL - √âcoulements viscoplastiques',
        presentation_content
    )
    
    # Th√®se de doctorat
    thesis_content = [
        "Cette th√®se de doctorat pr√©sente une contribution originale √† la mod√©lisation "
        "num√©rique des √©coulements gravitationnels viscoplastiques avec transition "
        "fluide/solide.",
        "Le travail s'articule autour de plusieurs axes :",
        "‚Ä¢ D√©veloppement de mod√®les math√©matiques pour les √©coulements granulaires",
        "‚Ä¢ Mise en ≈ìuvre de sch√©mas num√©riques adapt√©s aux singularit√©s viscoplastiques",
        "‚Ä¢ Validation exp√©rimentale sur des cas d'√©tude repr√©sentatifs",
        "‚Ä¢ Application √† des probl√®mes g√©ophysiques et industriels",
        "Les r√©sultats obtenus contribuent √† une meilleure compr√©hension "
        "des ph√©nom√®nes d'√©coulement dans les milieux granulaires et ouvrent "
        "de nouvelles perspectives pour la mod√©lisation de ph√©nom√®nes naturels "
        "tels que les avalanches et les coul√©es de d√©bris."
    ]
    
    create_pdf_placeholder(
        'pdf/thesis.pdf',
        'Th√®se de Doctorat - Mod√©lisation num√©rique des √©coulements gravitationnels viscoplastiques',
        thesis_content
    )
    
    print("\nüéâ Tous les fichiers PDF de remplacement ont √©t√© cr√©√©s !")
    print("üìÅ Dossier : pdf/")
    print("üìÑ Fichiers cr√©√©s :")
    print("   - abstract_lusso.pdf")
    print("   - presentation_ljll.pdf") 
    print("   - thesis.pdf")

if __name__ == "__main__":
    main() 